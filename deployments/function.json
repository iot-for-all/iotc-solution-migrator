{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "resourcePrefix": {
            "type": "string"
        }
    },
    "variables": {
        "apiVersions": {
            "functionapp": "2018-11-01",
            "storage": "2021-06-01"
        },
        "names": {
            "hostingPlan": "[format('{0}{1}hosting',parameters('resourcePrefix'),uniqueString(resourceGroup().id)]",
            "function": "[format('{0}{1}fn',parameters('resourcePrefix'),uniqueString(resourceGroup().id)]",
            "storage": "[format('{0}{1}sa',parameters('resourcePrefix'),uniqueString(resourceGroup().id)]"
        }
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[variables('apiVersions').storage]",
            "name": "[variables('names').storage]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "Standard_LRS"
            },
            "kind": "StorageV2",
            "properties": {}
        },
        {
            "apiVersion": "[variables('apiVersions').functionapp]",
            "name": "[variables('names').hostingPlan]",
            "type": "Microsoft.Web/serverfarms",
            "location": "[resourceGroup().location]",
            "kind": "linux",
            "dependsOn": [],
            "properties": {
                "name": "[variables('names').hostingPlan]",
                "workerSize": 0,
                "workerSizeId": 0,
                "numberOfWorkers": 1,
                "reserved": true
            },
            "sku": {
                "Tier": "Dynamic",
                "Name": "Y1"
            }
        },
        {
            "apiVersion": "[variables('apiVersions').functionapp]",
            "name": "[variables('names').function]",
            "type": "Microsoft.Web/sites",
            "kind": "functionapp,linux",
            "location": "[resourceGroup().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "dependsOn": [
                "[concat('Microsoft.Web/serverfarms/', variables('names').hostingPlan)]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('names').storage)]"
            ],
            "properties": {
                "name": "[variables('names').function]",
                "siteConfig": {
                    "appSettings": [
                        {
                            "name": "FUNCTIONS_EXTENSION_VERSION",
                            "value": "~4"
                        },
                        {
                            "name": "FUNCTIONS_WORKER_RUNTIME",
                            "value": "node"
                        },
                        {
                            "name": "AzureWebJobsStorage",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('names').storage,';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('name').storage), variables('apiVersions').storage).keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('names').storage,';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('name').storage), variables('apiVersions').storage).keys[0].value,';EndpointSuffix=','core.windows.net')]"
                        },
                        {
                            "name": "WEBSITE_CONTENTSHARE",
                            "value": "[concat(toLower(parameters('name')), 'af0c')]"
                        }
                    ],
                    "cors": {
                        "allowedOrigins": [
                            "https://ms.portal.azure.com"
                        ]
                    },
                    "use32BitWorkerProcess": false,
                    "ftpsState": "FtpsOnly",
                    "linuxFxVersion": "Node|16"
                },
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms',variables('names').hostingPlan)]",
                "clientAffinityEnabled": false,
                "virtualNetworkSubnetId": null,
                "httpsOnly": true
            }
        },
        {
            "type": "Microsoft.Web/sites/config",
            "apiVersion": "[variables('apiVersions).functionapp]",
            "name": "[concat([variables('names').function], '/web')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', [variables('names').function])]"
            ],
            "properties": {
                "numberOfWorkers": 1,
                "defaultDocuments": [
                    "Default.htm",
                    "Default.html",
                    "Default.asp",
                    "index.htm",
                    "index.html",
                    "iisstart.htm",
                    "default.aspx",
                    "index.php"
                ],
                "linuxFxVersion": "Node|16",
                "requestTracingEnabled": false,
                "remoteDebuggingEnabled": false,
                "httpLoggingEnabled": false,
                "acrUseManagedIdentityCreds": false,
                "logsDirectorySizeLimit": 35,
                "detailedErrorLoggingEnabled": false,
                "scmType": "None",
                "use32BitWorkerProcess": false,
                "webSocketsEnabled": false,
                "alwaysOn": false,
                "managedPipelineMode": "Integrated",
                "virtualApplications": [
                    {
                        "virtualPath": "/",
                        "physicalPath": "site\\wwwroot",
                        "preloadEnabled": false
                    }
                ],
                "loadBalancing": "LeastRequests",
                "experiments": {
                    "rampUpRules": []
                },
                "autoHealEnabled": false,
                "vnetRouteAllEnabled": false,
                "vnetPrivatePortsCount": 0,
                "cors": {
                    "allowedOrigins": [
                        "*"
                    ],
                    "supportCredentials": false
                },
                "localMySqlEnabled": false,
                "managedServiceIdentityId": 27408,
                "ipSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictions": [
                    {
                        "ipAddress": "Any",
                        "action": "Allow",
                        "priority": 2147483647,
                        "name": "Allow all",
                        "description": "Allow all access"
                    }
                ],
                "scmIpSecurityRestrictionsUseMain": false,
                "http20Enabled": false,
                "minTlsVersion": "1.2",
                "scmMinTlsVersion": "1.2",
                "ftpsState": "AllAllowed",
                "preWarmedInstanceCount": 0,
                "functionAppScaleLimit": 200,
                "functionsRuntimeScaleMonitoringEnabled": false,
                "minimumElasticInstanceCount": 0,
                "azureStorageAccounts": {}
            }
        }
    ],
    "outputs": {
        "function": {
            "type": "object",
            "value": {
                "tenantId": "[reference(resourceId('Microsoft.Web/sites', variables('names').function), variables('apiVersions').functionapp, 'Full').identity.tenantId]",
                "objectId": "[reference(resourceId('Microsoft.Web/sites', variables('names').function), variables('apiVersions').functionapp, 'Full').identity.principalId]",
                "identityName": "[variables('names').function]"
            }
        }
    }
}